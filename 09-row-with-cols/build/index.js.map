{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./src/index.js","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["wp","i18n","__","setLocaleData","registerBlockType","blocks","blockEditor","InnerBlocks","InspectorControls","components","TextControl","PanelBody","RangeControl","ToggleControl","data","withSelect","withDispatch","makeColClassNames","sizesArray","prefix","sizeIntervals","colClassNames","forEach","value","index","sizeInterval","buildClassName","push","console","log","join","title","icon","category","parent","attributes","colConfig","type","rowConfig","fromRowConfig","sizeXs","sizeSm","sizeMd","sizeLg","sizeXl","edit","select","clientId","getBlockHierarchyRootClientId","getBlockParentsByBlockName","getBlockAttributes","parentClientId","ancestorClientIds","ancestorClientId","length","parentAttributes","Object","entries","key","props","className","setAttributes","onChangeColConfig","onChangeXsColSize","toString","onChangeXsEqualSize","onChangeXsAutoSize","onChangeSmColSize","onChangeSmEqualSize","onChangeSmAutoSize","onChangeMdColSize","onChangeMdEqualSize","onChangeMdAutoSize","onChangeLgColSize","onChangeLgEqualSize","onChangeLgAutoSize","onChangeXlColSize","onChangeXlEqualSize","onChangeXlAutoSize","colClassName","parseInt","save","default","getBlocksByClientId","children","innerBlocks","dispatch","updateBlockAttributes","isSelected","colsTemplate","allowedBlocks","onChangeRowConfig","column","newAttributes","onChangeFromRowConfig","applyWithSelect","columns","applyWithDispatch"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","const { __, setLocaleData } = wp.i18n;\nconst {\n    registerBlockType,\n} = wp.blocks;\nconst {\n    InnerBlocks,\n    InspectorControls,\n} = wp.blockEditor;\nconst { \n    TextControl,\n    PanelBody,\n    RangeControl,\n    ToggleControl,\n} = wp.components;\n\nconst { \n    withSelect,\n    withDispatch, \n} = wp.data;\n\nconst makeColClassNames = ( sizesArray ) => {\n\n    const prefix = 'col';\n    const sizeIntervals = [ 'xs', 'sm', 'md', 'lg', 'xl' ];\n\n    const colClassNames = [];\n\n    sizesArray.forEach( ( value, index ) => {\n\n        const sizeInterval = sizeIntervals[ index ];\n\n        let buildClassName = '';\n\n        if ( value ) {\n\n            buildClassName += 'col';\n\n            if ( sizeInterval == 'xs' ) {\n                // do nothing \n            }\n            else {\n                buildClassName += '-' + sizeInterval;\n            }\n\n            if ( value != 'null' ) {\n                buildClassName += '-' + value;\n            }\n\n            colClassNames.push( buildClassName );\n        }\n\n    } );\n\n    console.log( 'colClassNames.join( \\' \\' ): \"' + colClassNames.join( ' ' ) + '\"' );\n\n    return colClassNames.join( ' ' );\n}\n\n\nregisterBlockType( 'bsx-blocks/col', {\n    title: __( 'BSX Column', 'bsx-blocks' ),\n    icon: 'grid-view',\n    category: 'layout',\n    parent: [ 'bsx-blocks/row-with-cols' ],\n    attributes: {\n        colConfig: {\n            type: 'string',\n        },\n        rowConfig: {\n            type: 'string'\n        },\n        fromRowConfig: {\n            type: 'string'\n        },\n        sizeXs: {\n            type: 'string',\n        },\n        sizeSm: {\n            type: 'string',\n        },\n        sizeMd: {\n            type: 'string',\n        },\n        sizeLg: {\n            type: 'string',\n        },\n        sizeXl: {\n            type: 'string',\n        },\n    },\n    edit: withSelect( ( select, { clientId } ) => {\n        const { \n            getBlockHierarchyRootClientId, \n            getBlockParentsByBlockName, \n            getBlockAttributes, \n        } = select( 'core/block-editor' );\n\n        // get root (not parent)\n        //const parentClientId = getBlockHierarchyRootClientId( clientId );\n\n        console.log( 'parentClientId: \"' + parentClientId + '\"' );\n\n        // getBlockParentsByBlockName\n\n        const ancestorClientIds = getBlockParentsByBlockName( clientId, 'bsx-blocks/row-with-cols' );\n\n        console.log( 'ancestorClientIds: \"' + ancestorClientIds + '\"' );\n\n        ancestorClientIds.forEach( ( ancestorClientId, index ) => {\n            console.log( 'ancestorClientId[ ' + index + ' ]: \"' + ancestorClientId + '\"' );\n        } ); \n\n        // get last item which is parent\n        const parentClientId = ancestorClientIds[ ancestorClientIds.length - 1 ];\n\n        const parentAttributes = getBlockAttributes( parentClientId );\n\n        console.log( 'parentAttributes: \"' + parentAttributes + '\"' );\n\n        if ( !! parentAttributes ) {\n            for ( let [ key, value ] of Object.entries( parentAttributes ) ) {\n                console.log( 'key: \"' + key + '\", value: \"' + value + '\"' );\n            }\n        }\n\n        console.log( 'parentAttributes.fromRowConfig: \"' + parentAttributes.fromRowConfig + '\"' );\n\n        return {\n            parentAttributes,\n        };\n    } )( ( props ) => {\n\n        const {\n            className,\n            attributes: {\n                rowConfig,\n                colConfig,\n                fromRowConfig,\n                sizeXs,\n                sizeSm,\n                sizeMd,\n                sizeLg,\n                sizeXl,\n            },\n            setAttributes,\n            parentAttributes,\n        } = props;\n\n        const onChangeColConfig = ( value ) => {\n            setAttributes( { colConfig: value } );\n        };\n\n        // xs\n        const onChangeXsColSize = ( value ) => {\n            setAttributes( { sizeXs: !! value ? value.toString() : '' } );\n        };\n        const onChangeXsEqualSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeXs: 'null' } );\n            }\n            else if ( sizeXs == 'null' ) {\n                setAttributes( { sizeXs: '' } );\n            }\n        };\n        const onChangeXsAutoSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeXs: 'auto' } );\n            }\n            else if ( sizeXs == 'auto' ) {\n                setAttributes( { sizeXs: '' } );\n            }\n        };\n\n        // sm\n        const onChangeSmColSize = ( value ) => {\n            setAttributes( { sizeSm: !! value ? value.toString() : '' } );\n        };\n        const onChangeSmEqualSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeSm: 'null' } );\n            }\n            else if ( sizeSm == 'null' ) {\n                setAttributes( { sizeSm: '' } );\n            }\n        };\n        const onChangeSmAutoSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeSm: 'auto' } );\n            }\n            else if ( sizeSm == 'auto' ) {\n                setAttributes( { sizeSm: '' } );\n            }\n        };\n\n        // md\n        const onChangeMdColSize = ( value ) => {\n            setAttributes( { sizeMd: !! value ? value.toString() : '' } );\n        };\n        const onChangeMdEqualSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeMd: 'null' } );\n            }\n            else if ( sizeMd == 'null' ) {\n                setAttributes( { sizeMd: '' } );\n            }\n        };\n        const onChangeMdAutoSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeMd: 'auto' } );\n            }\n            else if ( sizeMd == 'auto' ) {\n                setAttributes( { sizeMd: '' } );\n            }\n        };\n\n        // lg\n        const onChangeLgColSize = ( value ) => {\n            setAttributes( { sizeLg: !! value ? value.toString() : '' } );\n        };\n        const onChangeLgEqualSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeLg: 'null' } );\n            }\n            else if ( sizeLg == 'null' ) {\n                setAttributes( { sizeLg: '' } );\n            }\n        };\n        const onChangeLgAutoSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeLg: 'auto' } );\n            }\n            else if ( sizeLg == 'auto' ) {\n                setAttributes( { sizeLg: '' } );\n            }\n        };\n\n        // xl\n        const onChangeXlColSize = ( value ) => {\n            setAttributes( { sizeXl: !! value ? value.toString() : '' } );\n        };\n        const onChangeXlEqualSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeXl: 'null' } );\n            }\n            else if ( sizeXl == 'null' ) {\n                setAttributes( { sizeXl: '' } );\n            }\n        };\n        const onChangeXlAutoSize = ( value ) => {\n            if ( value ) {\n                setAttributes( { sizeXl: 'auto' } );\n            }\n            else if ( sizeXl == 'auto' ) {\n                setAttributes( { sizeXl: '' } );\n            }\n        };\n\n        const colClassName = makeColClassNames( [ sizeXs, sizeSm, sizeMd, sizeLg, sizeXl ] );\n\n        setAttributes( { fromRowConfig: parentAttributes.fromRowConfig } );\n\n        return [\n            <InspectorControls>\n                <PanelBody title={ __( 'BSX Block Settings', 'bsx-blocks' ) }>\n                    <RangeControl \n                        label={ __( 'XS Column Width', 'bsx-blocks' ) }\n                        value={ parseInt( sizeXs ) } \n                        onChange={ onChangeXsColSize }\n                        min={ 0 }\n                        max={ 12 }\n                        help={ __( '1 ... 12 or empty', 'bsx-blocks' ) }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'XS Equal Width', 'bsx-blocks' ) }\n                        checked={ sizeXs == 'null' }\n                        onChange={ onChangeXsEqualSize }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'XS Auto Width', 'bsx-blocks' ) }\n                        checked={ sizeXs == 'auto' }\n                        onChange={ onChangeXsAutoSize }\n                    />\n\n                    <RangeControl \n                        label={ __( 'SM Column Width', 'bsx-blocks' ) }\n                        value={ parseInt( sizeSm ) } \n                        onChange={ onChangeSmColSize }\n                        min={ 0 }\n                        max={ 12 }\n                        help={ __( '1 ... 12 or empty', 'bsx-blocks' ) }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'SM Equal Width', 'bsx-blocks' ) }\n                        checked={ sizeSm == 'null' }\n                        onChange={ onChangeSmEqualSize }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'SM Auto Width', 'bsx-blocks' ) }\n                        checked={ sizeSm == 'auto' }\n                        onChange={ onChangeSmAutoSize }\n                    />\n\n                    <RangeControl \n                        label={ __( 'MD Column Width', 'bsx-blocks' ) }\n                        value={ parseInt( sizeMd ) } \n                        onChange={ onChangeMdColSize }\n                        min={ 0 }\n                        max={ 12 }\n                        help={ __( '1 ... 12 or empty', 'bsx-blocks' ) }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'MD Equal Width', 'bsx-blocks' ) }\n                        checked={ sizeMd == 'null' }\n                        onChange={ onChangeMdEqualSize }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'MD Auto Width', 'bsx-blocks' ) }\n                        checked={ sizeMd == 'auto' }\n                        onChange={ onChangeMdAutoSize }\n                    />\n\n                    <RangeControl \n                        label={ __( 'LG Column Width', 'bsx-blocks' ) }\n                        value={ parseInt( sizeLg ) } \n                        onChange={ onChangeLgColSize }\n                        min={ 0 }\n                        max={ 12 }\n                        help={ __( '1 ... 12 or empty', 'bsx-blocks' ) }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'LG Equal Width', 'bsx-blocks' ) }\n                        checked={ sizeLg == 'null' }\n                        onChange={ onChangeLgEqualSize }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'LG Auto Width', 'bsx-blocks' ) }\n                        checked={ sizeLg == 'auto' }\n                        onChange={ onChangeLgAutoSize }\n                    />\n\n                    <RangeControl \n                        label={ __( 'XL Column Width', 'bsx-blocks' ) }\n                        value={ parseInt( sizeXl ) } \n                        onChange={ onChangeXlColSize }\n                        min={ 0 }\n                        max={ 12 }\n                        help={ __( '1 ... 12 or empty', 'bsx-blocks' ) }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'XL Equal Width', 'bsx-blocks' ) }\n                        checked={ sizeXl == 'null' }\n                        onChange={ onChangeXlEqualSize }\n                        className=\"mb-0\"\n                    />\n                    <ToggleControl\n                        label={ __( 'XL Auto Width', 'bsx-blocks' ) }\n                        checked={ sizeXl == 'auto' }\n                        onChange={ onChangeXlAutoSize }\n                    />\n\n                    <TextControl \n                        label={ __( 'Col config (test)', 'bsx-blocks' ) }\n                        value={ colConfig } \n                        onChange={ onChangeColConfig }\n                    />\n                </PanelBody>\n            </InspectorControls>,\n            (\n                <div className={ colClassName } data-col-config={ colConfig } data-row-config={ rowConfig } data-from-row-config={ fromRowConfig }>\n                    <InnerBlocks \n                        renderAppender={ () => (\n                            <InnerBlocks.ButtonBlockAppender />\n                        ) }\n                    />\n                </div>\n            )\n        ];\n    } ),\n    save: ( props ) => {\n        const {\n            //context,\n            className,\n            attributes: {\n                colConfig,\n                rowConfig,\n                fromRowConfig,\n                sizeXs,\n                sizeSm,\n                sizeMd,\n                sizeLg,\n                sizeXl,\n            },\n        } = props;\n\n        const colClassName = makeColClassNames( [ sizeXs, sizeSm, sizeMd, sizeLg, sizeXl ] );\n\n        return (\n            <div className={ colClassName } data-col-config={ colConfig } data-row-config={ rowConfig } data-from-row-config={ fromRowConfig }>\n                <InnerBlocks.Content />\n            </div>\n        );\n    },\n} );\n\n\nregisterBlockType( 'bsx-blocks/row-with-cols', {\n    title: __( 'BSX Columns', 'bsx-blocks' ),\n    icon: 'grid-view',\n    category: 'layout',\n    attributes: {\n        rowConfig: {\n            type: 'string',\n        },\n        fromRowConfig: {\n            type: 'string',\n            default: 'Test hello! :D',\n        },\n    },\n    edit: withSelect( ( select, { clientId } ) => {\n        const { getBlocksByClientId } = select( 'core/block-editor' );\n\n        const children = getBlocksByClientId( clientId )[ 0 ]\n            ? getBlocksByClientId( clientId )[ 0 ].innerBlocks\n            : [];\n\n        return {\n            children,\n        };\n    } )( withDispatch( ( dispatch ) => {\n\n            const { updateBlockAttributes } = dispatch( 'core/block-editor' );\n\n            return {\n                updateBlockAttributes,\n            };\n    } )( ( props ) => {\n        const {\n            clientId,\n            className,\n            attributes: {\n                rowConfig,\n                fromRowConfig,\n            },\n            setAttributes,\n            isSelected,\n            children,\n            updateBlockAttributes,\n        } = props;\n\n        const colsTemplate = [ \n            [ \n                'bsx-blocks/col', {\n                    sizeMd: 4\n                },\n            ], \n            [ \n                'bsx-blocks/col', {\n                    sizeMd: 4\n                },\n            ], \n            [ \n                'bsx-blocks/col', {\n                    sizeMd: 4\n                },\n            ],\n        ];\n\n        const allowedBlocks = [ 'bsx-blocks/col' ];\n\n        const onChangeRowConfig = ( value ) => {\n\n            children.forEach( ( column, index ) => {\n                const newAttributes = { rowConfig: value };\n                updateBlockAttributes( column.clientId, newAttributes );\n            } );\n\n            setAttributes( { rowConfig: value } );\n\n        };\n\n        const onChangeFromRowConfig = ( value ) => {\n\n            setAttributes( { fromRowConfig: value } );\n\n        };\n\n        const applyWithSelect = withSelect( ( select, { clientId } ) => {\n            const { getBlocksByClientId } =\n                select( 'core/block-editor' );\n\n            const columns = getBlocksByClientId( clientId )[ 0 ]\n                ? getBlocksByClientId( clientId )[ 0 ].innerBlocks : [];\n\n            return {\n                columns,\n            };\n        } );\n        const applyWithDispatch = withDispatch( ( dispatch ) => {\n            const { updateBlockAttributes } =\n                dispatch( 'core/block-editor' );\n\n            return {\n                updateBlockAttributes,\n            };\n        } );\n\n        return [\n            <InspectorControls>\n                <PanelBody title={ __( 'BSX Block Settings', 'bsx-blocks' ) }>\n                    <TextControl \n                        label={ __( 'Row config (test)', 'bsx-blocks' ) }\n                        value={ rowConfig } \n                        onChange={ onChangeRowConfig }\n                    />\n                    <TextControl \n                        label={ __( 'Row config (test)', 'bsx-blocks' ) }\n                        value={ fromRowConfig } \n                        onChange={ onChangeFromRowConfig }\n                    />\n                </PanelBody>\n            </InspectorControls>,\n            (\n                <div className=\"row\" data-row-config={ rowConfig } data-from-row-config={ fromRowConfig }>\n                    <InnerBlocks \n                        template={ colsTemplate }\n                        allowedBlocks={ allowedBlocks }\n                    />\n                </div>\n            )\n        ];\n    } ) ),\n    save: ( props ) => {\n        const {\n            className,\n            attributes: {\n                rowConfig,\n                fromRowConfig,\n            },\n        } = props;\n\n        return (\n            <div className=\"row\" data-row-config={ rowConfig } data-from-row-config={ fromRowConfig }>\n                <InnerBlocks.Content />\n            </div>\n        );\n    },\n} );\n\n","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}